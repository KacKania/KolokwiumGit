#include <iostream>


#define ZadanieP

#ifdef ZadanieD
#include "LabPK.h"
using namespace std;



double dlugosc_boku(punkt p1, punkt p2)
{
	double x = p1.x - p2.x;
	double y = p1.y - p2.y;
	double dist;
	dist = pow(x, 2) + pow(y, 2);
	dist = sqrt(dist);

	return dist;
}

void trojkat::sprawdz_czy_poprawny(punkt p)
{
if (p.x < 0 || p.y < 0)

	{
		throw new std::invalid_argument("ujemne wspolrzedne");
	}
	if (p.x > szerokosc || p.y > wysokosc)
	{
		throw new std::invalid_argument("Poza ekranem");
	}
}
double trojkat::obwod();
{
	return dlugosc_boku(a) + dlugosc_boku(b) + dlugosc boku(c);
}
int main()
{
	//Tu umieszczaj treść pliku main zadania dodatkowego
}

#endif

#ifdef ZadanieP
#include <iostream>

class ulamek
{
private:
	int licznik;
	int mianownik;
	int nowy;
	int prosta;
	int zadana;

public:
	void setmianownik(int nowy)
	{
		if (mianownik = 0)
			mianownik = 1;
		else if (mianownik < 0)
			licznik = licznik * (-1);
		else
			mianownik > 0;
	}
	
	void setnajprostszapostac(int prosta)
	{
		do
		{
			licznik / mianownik;
		} while ((licznik / mianownik)%2 );
	}
	void setzadanymianownil(int zadana) {}

	int getmianownik() { return nowy; }
	int getdziesietna() { return  0.1 * licznik / mianownik;; }
	int getczesccalkowita() { return mianownik / licznik; }
	

	
};

	


int main()
{
	//Tu umieszczaj treść pliku main zadania podstawowego
}
#endif