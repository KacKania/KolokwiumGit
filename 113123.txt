dla kodu w c++:
enum class TypTowaru { ciekly, sypki, paczkowany };
class SamochodCiezarowy
{
private:
	double m_predkosc;
	char m_numerRej[9];
	double m_pojemnosc;
	TypTowaru m_typ;

	void setPojemnosc(double i_poj) { m_pojemnosc = (i_poj > 1000) ? i_poj : 1000; }
	void setPredkosc(double i_pred) { m_predkosc = (i_pred > 160) ? i_pred : 160; }

public:
	void setTyp(TypTowaru i_typ) { m_typ = i_typ; }
	void setNumerRej(const char* i_num) { strncpy(m_numerRej, i_num, 8); }

	TypTowaru getTyp() { return m_typ; }
	const char* getNumerRej() { return m_numerRej; }
	double getPredkosc() { return m_predkosc; }
	double getPojemnosc() { return m_pojemnosc; }

	SamochodCiezarowy(double i_pred, double i_poj, TypTowaru i_typ, const char* i_num)
	{
		setPredkosc(i_pred);
		setPojemnosc(i_poj);
		setNumerRej(i_num);
	}
};

class Flota {
private:

	SamochodCiezarowy* samochody[20];
	int n;

public:
	Flota() {
		n = 0;
		for (int i = 0; i < 20; i++) {
			samochody[i] = nullptr;
		}
	}
	dodaj w c++ Dla kasy Flota dwie metody:
1) zwracającą liczbę aktualnie przypisanych pojazdów.
2) zwracająca liczbę wolnych wskaźników (ile pojazdów da się jeszcze przypisać).
Nie zliczaj liczb wolnych/zajętych wskaźników tylko posłuż się licznikiem i rozmiarem tablicy do ich wyliczenia.

	
